drop database if exists rk3;
create database rk3;
\c rk3;

drop table if exists satellite;
drop table if exists flight;

create table satellite (
    id serial primary key,
    name varchar(255) not null,
    prod_date date not null, 
    country varchar(255) not null
);

create table  flight (
    sid int not null,
    lnch_date date not null,
    lnch_time time not null,
    lnch_day varchar(255) not null check (
        lnch_day in (
            'Понедельник', 
            'Вторник', 
            'Среда', 
            'Четверг', 
            'Пятница', 
            'Суббота', 
            'Воскресенье'
        )
    ),
    type int check (type in (0, 1)),
    primary key (sid, lnch_date, lnch_time),
    foreign key (sid) references satellite(id)
);

insert into satellite (
    name, 
    prod_date, 
    country
) values
    ('SJT-2086', '2050-01-01', 'Россия'),
    ('SJT-2066', '2045-01-01', 'Россия'),
    ('SJT-2036', '2040-01-01', 'Россия'),
    ('Шинцзин', '2049-12-01', 'Китай'),
    ('s2', '2035-11-11', 'США'),
    ('SgJT-2034', '2041-12-01', 'Россия'),
    ('SgJT-2023', '2042-01-01', 'Россия'),
    ('SfJT-2024', '2043-05-01', 'Россия'),
    ('SdJT-2025', '2044-01-01', 'Россия'),
    ('SaJT-2026', '2045-01-01', 'Россия'),
    ('JT-2022', '2046-01-01', 'Россия'),
    ('ST-2024', '2024-01-02', 'Россия'),
    ('S2-2025', '2048-01-01', 'Россия'),
    ('s123123', '2034-05-11', 'США'),
    ('s1фывф23', '2034-05-15', 'Англия');


insert into flight (
    sid, 
    lnch_date, 
    lnch_time, 
    lnch_day, 
    type
) values 
    (1, '2050-05-11', '09:00:00', 'Среда', 1),
    (1, '2051-06-11', '23:05:00', 'Среда', 0),
    (1, '2051-10-10', '23:50:00', 'Вторник', 1),
    (2, '2024-05-11', '15:15:00', 'Среда', 1),
    (1, '2052-01-01', '12:15:00', 'Понедельник', 0),
    (1, '2024-01-04', '12:15:00', 'Понедельник', 0),
    (2, '2024-01-05', '12:15:00', 'Понедельник', 1),
    (2, '2024-01-07', '12:15:00', 'Понедельник', 0),
    (2, '2024-01-26', '12:15:00', 'Понедельник', 1),
    (2, '2024-01-27', '12:15:00', 'Понедельник', 0),
    (2, '2024-02-15', '12:15:00', 'Понедельник', 1),
    (4, '2024-10-10', '12:15:00', 'Понедельник', 1),
    (1, '2023-01-15', '12:15:00', 'Понедельник', 0),
    (4, '2023-12-10', '12:15:00', 'Понедельник', 0);

-- 1 - получить спутники, которые не участвовали в полётах (нет информации о полетах)
select 
    s.id, 
    s.name
from satellite s
where not exists (
    select 1
    from flight f
   where s.id = f.sid
);

-- 2 - получить все пары различных спутников из одной и той же страны, 
-- где идентификатор первого спутника меньше идентификатора второго.
select 
    s1.id, 
    s2.id, 
    s1.country
from satellite s1
join satellite s2
on s1.country = s2.country
where s1.id < s2.id;

-- 3 - получить идентификаторы спутников, которые отправлялись или прилетали более 5 раз
select sid
from flight
group by sid
having COUNT(*) > 5;

-- Разработать приложение, выполняющее запросы к БД. Каждый запрос реализовать
-- в виде SQL команды (обработка на уровне БД), ORM (обработка на уровне приложения)